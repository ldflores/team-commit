Titanic <- data.frame(Titanic)
# Create a variable `children` that are the rows of the data frame with information about children on the Titanic.
children <- Titanic[Titanic$Age == 'Child',]
# Create a variable `num_children` that is the total number of children on the Titanic.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has row with the largest absolute number of losses (people who did not survive).
# Tip: you can use multiple statements (lines of code), such as to make "intermediate" sub-frames
#  (similar to what you did with the `children` variables)
get_deaths <- Titanic[Titanic$Survived == 'No',]
most_lost_sorted <- get_deaths[which.max(get_deaths$Freq),]
# Define a function called `SurvivalRate` that takes in a ticket class (e.g., "1st", "2nd") as an argument.
# This function should return a sentence describing the total survival rate of men vs. "women and children" in that ticketing class.
# For example: `"Of Crew class, 87% of women and children survived and 22% of men survived."`
# The approach you take to generating the sentence to return is up to you. A good solution will likely utilize
# intermediate variables (subsets of data frames) and filtering to produce the required data.
# Avoid using a "loop" in R!
SurvivalRate <- function(ticket_class) {
curr_class <- Titanic[Titanic$Class == ticket_class,]
curr_class_men <- sum(Curr_class[curr_class$Freq == 'Male',])
men_dead <- sum(curr_class$Sex == 'Male')
curr_class_women <- sum(curr_class$Freq == 'Female')
curr_class_total <- sum(curr_class$Freq)
print(curr_class)
print(curr_class_men)
#print(curr_class_women)
#print(curr_class_total)
}
# Call your `SurvivalRate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
################################### Reading in Data (40 points) ###################################
# In this section, we'll read in a .csv file, which is essentially a tabular row/column layout
# This is like Microsoft Excel or Google Docs, but without the formatting.
# The .csv file we'll be working with has the life expectancy for each country in 1960 and 2013.
# We'll ask real-world questions about the data by writing the code that answers our question. Here are the steps you should walk through:
# Using the `read.csv` function, read the life_expectancy.csv file into a variable called `life_expectancy`
# Makes sure not to read strings as factors
## Determine if life_expectancy is a data.frame by using the is.data.frame function.
## You may also want to inspect it's content it by View() or by just printing.
# Create a column `life_expectancy$change` that is the change in life expectancy from 1960 to 2013
# Create a variable `most_improved` that is the name of the country with the largest gain in life expectancy
# Create a variable `num_small_gain` that has the number of countries whose life expectance has improved fewer than 5 years between 1960 and 2013
# Write a function `CountryChange` that takes in a country's name as a parameter, and returns it's change in life expectancy from 1960 to 2013
# Using your `CountryChange` function, create a variable `sweden_change` that is the change in life expectancy from 1960 to 2013 in Sweden
# Define a function `LowestLifeExpInRegion` that takes in a **region** as an argument, and returns
# the **name of the country** with the lowest life expectancy in 2013 (in that region)
# Using the function you just wrote, create a variable `lowest_in_south_asia` that is the country with the lowest life expectancy in 2013 in South Asia
# Write a function `BiggerChange` that takes in two country names as parameters, and returns a sentence that
# describes which country experienced a larger gain in life expectancy (and by how many years).
# For example, if you passed the values "China", and "Bolivia" into your function, it would return this:
# "The country with the bigger change in life expectancy was China (gain=31.9), whose life expectancy grew by 7.4 years more than Bolivia's (gain=24.5)."
# Make sure to round your numbers.
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
##  (the United States or France)
## Write your `life_expectancy` data.frame to a new .csv file to your data/ directory with the filename `life_expectancy_with_change.csv`.
## Make sure not to write row names.
################################### Challenge (10 points) ###################################
## Create a variable that has the name of the region with the
## highest average change in life expectancy between the two time points.
## Your are welcome to weight the change by population, but just unweighted average over countries is good as well.
## To do this, you'll need to compute the average change across the countries in each region, and then
## compare the averages across regions. Feel free to use any library of your choice, or base R functions.
# Create a *well labeled* plot (readable title, x-axis, y-axis) showing
# Life expectancy in 1960 v.s. Change in life expectancy
# Programmatically save (i.e., with code, not using the Export button) your graph as a .png file in your repo
# Then, in a comment below, provide an *interpretation* of the relationship you observe
# Feel free to use any library of your choice, or base R functions.
# What is your interpretation of the observed relationship?
SurvivalRate('1st')
curr_class <- Titanic[Titanic$Class == ticket_class,]
# a3-using-data
################################### Set up (2 Points) ###################################
# Before you get started, make sure to set your working directory using the tilde (~)
################################### DataFrame Manipulation (20 Points) ###################################
# Create a vector `first_names` with 5 names in it
first_names <- c('doug', 'sam', 'daniel', 'steve', 'vineet')
# Create a vector `math_grades` with 5 hypothetical grades (0 - 100) in a math course (that correspond to the 5 names above)
math_grades <- c(100, 80, 76, 25, 10)
# Create a vector `spanish_grades` with 5 hypothetical grades (0 - 100) in a Spanish course (that correspond to the 5 names above)
spanish_grades <- c(100, 40, 80, 59, 10)
# Create a data.frame variable `students` by combining your vectors `first_names`, `math_grades`, and `spanish_grades`
students <- data.frame(first_names, math_grades, spanish_grades)
# Create a variable `num_students` that contains the number of rows in your data.frame `students`
num_students <- nrow(students)
# Create a variable `num_courses` that contains the number of columns in your data.frame `students` minus one (b/c of their names)
num_courses <- num_students - 1
# Add a new column `grade_diff` to your dataframe, which is equal to `students$math_grades` minus `students$spanish_grades`
students$grade_diff <- students$math_grades - students$spanish_grades
# Add another column `better_at_math` as a boolean (TRUE/FALSE) variable that indicates that a student got a better grade in math
students$better_at_math <- students$grade_diff > 0
# Create a variable `num_better_at_math` that is the number (i.e., one numeric value) of students better at math
num_better_at_math <- nrow(students[students$better_at_math == TRUE,])
# Write your `students` data.frame to a new .csv file inside your data/ directory with the filename `grades.csv`. Make sure not to write row names.
write.csv(students, file = "D:/2017_Fall/Info_201/a3-data-dougdoenges/data/grades.csv", row.names = F)
################################### Loading R Data (28 points) ###################################
## In this section, you'll work with some data that comes built into the R environment.
## Load the `Titanic` data set. You may also want to use RStudio to `View()` it to inspect its rows and columns,
## or just print (selected lines of) it.
data(Titanic)
# This data set actually loads in a format called a *table*
# This is not a data frame. Use the `is.data.frame()` function to confirm this.
print(is.data.frame(Titanic))
# You should convert the `Titanic` variable into a data frame; you can use the `data.frame()` function or `as.data.frame()`
# Be sure to **not** treat strings as factors!
Titanic <- data.frame(Titanic)
# Create a variable `children` that are the rows of the data frame with information about children on the Titanic.
children <- Titanic[Titanic$Age == 'Child',]
# Create a variable `num_children` that is the total number of children on the Titanic.
# Hint: remember the `sum()` function!
num_children <- sum(children$Freq)
# Create a variable `most_lost` which has row with the largest absolute number of losses (people who did not survive).
# Tip: you can use multiple statements (lines of code), such as to make "intermediate" sub-frames
#  (similar to what you did with the `children` variables)
get_deaths <- Titanic[Titanic$Survived == 'No',]
most_lost_sorted <- get_deaths[which.max(get_deaths$Freq),]
# Define a function called `SurvivalRate` that takes in a ticket class (e.g., "1st", "2nd") as an argument.
# This function should return a sentence describing the total survival rate of men vs. "women and children" in that ticketing class.
# For example: `"Of Crew class, 87% of women and children survived and 22% of men survived."`
# The approach you take to generating the sentence to return is up to you. A good solution will likely utilize
# intermediate variables (subsets of data frames) and filtering to produce the required data.
# Avoid using a "loop" in R!
SurvivalRate <- function(ticket_class) {
curr_class <- Titanic[Titanic$Class == ticket_class,]
curr_class_men <- sum(Curr_class[curr_class$Freq == 'Male',])
men_dead <- sum(curr_class$Sex == 'Male')
curr_class_women <- sum(curr_class$Freq == 'Female')
curr_class_total <- sum(curr_class$Freq)
print(curr_class)
print(curr_class_men)
#print(curr_class_women)
#print(curr_class_total)
}
# Call your `SurvivalRate()` function on each of the ticketing classes (`Crew`, `1st`, `2nd`, and `3rd`)
curr_class <- Titanic[Titanic$Class == ticket_class,]
################################### Reading in Data (40 points) ###################################
# In this section, we'll read in a .csv file, which is essentially a tabular row/column layout
# This is like Microsoft Excel or Google Docs, but without the formatting.
# The .csv file we'll be working with has the life expectancy for each country in 1960 and 2013.
# We'll ask real-world questions about the data by writing the code that answers our question. Here are the steps you should walk through:
# Using the `read.csv` function, read the life_expectancy.csv file into a variable called `life_expectancy`
# Makes sure not to read strings as factors
## Determine if life_expectancy is a data.frame by using the is.data.frame function.
## You may also want to inspect it's content it by View() or by just printing.
# Create a column `life_expectancy$change` that is the change in life expectancy from 1960 to 2013
# Create a variable `most_improved` that is the name of the country with the largest gain in life expectancy
# Create a variable `num_small_gain` that has the number of countries whose life expectance has improved fewer than 5 years between 1960 and 2013
# Write a function `CountryChange` that takes in a country's name as a parameter, and returns it's change in life expectancy from 1960 to 2013
# Using your `CountryChange` function, create a variable `sweden_change` that is the change in life expectancy from 1960 to 2013 in Sweden
# Define a function `LowestLifeExpInRegion` that takes in a **region** as an argument, and returns
# the **name of the country** with the lowest life expectancy in 2013 (in that region)
# Using the function you just wrote, create a variable `lowest_in_south_asia` that is the country with the lowest life expectancy in 2013 in South Asia
# Write a function `BiggerChange` that takes in two country names as parameters, and returns a sentence that
# describes which country experienced a larger gain in life expectancy (and by how many years).
# For example, if you passed the values "China", and "Bolivia" into your function, it would return this:
# "The country with the bigger change in life expectancy was China (gain=31.9), whose life expectancy grew by 7.4 years more than Bolivia's (gain=24.5)."
# Make sure to round your numbers.
## Using your `BiggerChange` function, create a variable `usa_or_france` that describes who had a larger gain in life expectancy
##  (the United States or France)
## Write your `life_expectancy` data.frame to a new .csv file to your data/ directory with the filename `life_expectancy_with_change.csv`.
## Make sure not to write row names.
################################### Challenge (10 points) ###################################
## Create a variable that has the name of the region with the
## highest average change in life expectancy between the two time points.
## Your are welcome to weight the change by population, but just unweighted average over countries is good as well.
## To do this, you'll need to compute the average change across the countries in each region, and then
## compare the averages across regions. Feel free to use any library of your choice, or base R functions.
# Create a *well labeled* plot (readable title, x-axis, y-axis) showing
# Life expectancy in 1960 v.s. Change in life expectancy
# Programmatically save (i.e., with code, not using the Export button) your graph as a .png file in your repo
# Then, in a comment below, provide an *interpretation* of the relationship you observe
# Feel free to use any library of your choice, or base R functions.
# What is your interpretation of the observed relationship?
print(curr_class)
library(dplyr)
library(knitr)
data <- read.csv(file = 'data/UFOCoords.csv', stringsAsFactors = FALSE)
num_sightings_city <- function(set_city, set_state) {
get_num <- data %>% filter(City == set_city) %>% filter(State == set_state) %>% summarise(n = n())
print(get_num)
}
max_sightings_city <- function() {
get_max_location <- data %>% select(City, State) %>% group_by(City, State) %>% summarise(num_sightings = n()) %>% ungroup() %>%
filter(num_sightings == max(num_sightings))
print(get_max_location)
}
num_shape <- function(set_shape) {
num_shape <- data %>% filter(Shape == set_shape) %>% summarise(num = n())
print(num_shape)
}
max_sightings_city()
max_sightings_city()
library(dplyr)
library(ggplto)
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplto)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('/all-ages.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplto)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('/all-ages.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplto)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
print(data)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(selected, aes(Total, median)) +
geom_point(color = Major_category)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(selected, aes(Total, median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(selected, aes(x = Total, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(data, aes(x = Total, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(selected, aes(x = Total, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Total, Median)
ggplot(selected, aes(x = Total, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median)
ggplot(selected, aes(x = Total, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate)
ggplot(selected, aes(x = Unemployment_rate, y = median)) +
geom_point()
print(selected)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(round(Unemployment_rate, 2))
print(selected)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 3))
print(selected)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 3))
ggplot(selected, aes(x = Unemployment_rate, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 2))
ggplot(selected, aes(x = Unemployment_rate, y = median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 2))
ggplot(selected, aes(x = Unemployment_rate, y = Median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 3))
ggplot(selected, aes(x = Unemployment_rate, y = Median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate) %>%
mutate(Unemployment_rate = round(Unemployment_rate, 4))
ggplot(selected, aes(x = Unemployment_rate, y = Median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median)
ggplot(selected, aes(x = Total, y = Median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate)
ggplot(selected, aes(x = Unemployment_rate, y = Median)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate)
ggplot(selected, aes(x = Unemployment_rate, y = Median)) +
geom_point(color = Major_category)
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% select(Major_category, Major, Total, Median, Unemployment_rate)
ggplot(selected, aes(x = Unemployment_rate, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_range = P75th - P25th)
ggplot(selected, aes(x = salary_range, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_range = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_range, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_range, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Computers & Mathematics') %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Engineering') %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Engineering') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Computers & Mathematics') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Biology') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = (P75th - P25th) / Median)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_boxplot()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_scatter()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_bar()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_bar()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_histogram()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% filter(Major_category == 'Humanities & Liberal Arts') %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
library(dplyr)
library(ggplot2)
setwd('C:/Users/dougd/Desktop/Info_201/team-commit')
data <- read.csv('all-ages.csv', stringsAsFactors = FALSE)
selected <- data %>% mutate(salary_variability = P75th - P25th)
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
?outlier
ggplot(data, aes(x = major, y = Median)) +
geom_boxplot()
ggplot(data, aes(x = Major, y = Median)) +
geom_boxplot()
choose <- data %>% filter(Major_category == 'Engineering')
ggplot(choose, aes(x = Major, y = Median)) +
geom_boxplot()
choose <- data %>% filter(Major_category == 'Engineering')
ggplot(choose, aes(x = Major_category, y = Median)) +
geom_boxplot()
choose <- data %>% filter(Major_category == 'Engineering')
ggplot(choose, aes(x = Major, y = Median)) +
geom_boxplot()
ggplot(data, aes(x = Major_category, y = Median)) +
geom_boxplot()
ggplot(selected, aes(x = salary_variability, y = Median, color = Major_category)) +
geom_point()
shiny::runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
runApp('scripts')
